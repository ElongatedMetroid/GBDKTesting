                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12439 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _set_sprite_data
                                     13 	.globl _joypad
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area _DATA
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _INITIALIZED
                                     25 ;--------------------------------------------------------
                                     26 ; absolute external ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _DABS (ABS)
                                     29 ;--------------------------------------------------------
                                     30 ; global & static initialisations
                                     31 ;--------------------------------------------------------
                                     32 	.area _HOME
                                     33 	.area _GSINIT
                                     34 	.area _GSFINAL
                                     35 	.area _GSINIT
                                     36 ;--------------------------------------------------------
                                     37 ; Home
                                     38 ;--------------------------------------------------------
                                     39 	.area _HOME
                                     40 	.area _HOME
                                     41 ;--------------------------------------------------------
                                     42 ; code
                                     43 ;--------------------------------------------------------
                                     44 	.area _CODE
                                     45 ;src/main.c:7: int main(){
                                     46 ;	---------------------------------
                                     47 ; Function main
                                     48 ; ---------------------------------
      000000                         49 _main::
                                     50 ;src/main.c:8: SPRITES_8x16;       //sets the sprite size to 8x16 pixels 
      000000 F0r00                   51 	ldh	a, (_LCDC_REG + 0)
      000002 F6 04                   52 	or	a, #0x04
      000004 E0r00                   53 	ldh	(_LCDC_REG + 0), a
                                     54 ;src/main.c:10: set_sprite_data(0, 0, smileSprite);    
      000006 11r00r00                55 	ld	de, #_smileSprite
      000009 D5                      56 	push	de
      00000A AF                      57 	xor	a, a
      00000B 0F                      58 	rrca
      00000C F5                      59 	push	af
      00000D CDr00r00                60 	call	_set_sprite_data
      000010 E8 04                   61 	add	sp, #4
                                     62 ;/opt/gbdk/include/gb/gb.h:1247: OAM_item_t * itm = &shadow_OAM[nb];
      000012 21r00r00                63 	ld	hl, #_shadow_OAM
                                     64 ;/opt/gbdk/include/gb/gb.h:1248: itm->y=y, itm->x=x;
      000015 3E 4B                   65 	ld	a, #0x4b
      000017 22                      66 	ld	(hl+), a
      000018 36 4B                   67 	ld	(hl), #0x4b
                                     68 ;/opt/gbdk/include/gb/gb.h:1247: OAM_item_t * itm = &shadow_OAM[nb];
      00001A 21r04r00                69 	ld	hl, #(_shadow_OAM + 4)
                                     70 ;/opt/gbdk/include/gb/gb.h:1248: itm->y=y, itm->x=x;
      00001D 3E 4B                   71 	ld	a, #0x4b
      00001F 22                      72 	ld	(hl+), a
      000020 36 53                   73 	ld	(hl), #0x53
                                     74 ;src/main.c:15: SHOW_SPRITES;
      000022 F0r00                   75 	ldh	a, (_LCDC_REG + 0)
      000024 F6 02                   76 	or	a, #0x02
      000026 E0r00                   77 	ldh	(_LCDC_REG + 0), a
                                     78 ;src/main.c:17: while(1){
      000028                         79 00108$:
                                     80 ;src/main.c:19: switch(joypad())
      000028 CDr00r00                81 	call	_joypad
      00002B 7B                      82 	ld	a, e
      00002C FE 01                   83 	cp	a, #0x01
      00002E 28 0E                   84 	jr	Z, 00101$
      000030 FE 02                   85 	cp	a, #0x02
      000032 28 16                   86 	jr	Z, 00102$
      000034 FE 04                   87 	cp	a, #0x04
      000036 28 1E                   88 	jr	Z, 00103$
      000038 D6 08                   89 	sub	a, #0x08
      00003A 28 26                   90 	jr	Z, 00104$
      00003C 18 EA                   91 	jr	00108$
                                     92 ;src/main.c:21: case J_RIGHT:
      00003E                         93 00101$:
                                     94 ;/opt/gbdk/include/gb/gb.h:1174: shadow_OAM[nb].tile=tile;
      00003E 21r02r00                95 	ld	hl, #(_shadow_OAM + 2)
      000041 36 00                   96 	ld	(hl), #0x00
      000043 21r06r00                97 	ld	hl, #(_shadow_OAM + 6)
      000046 36 02                   98 	ld	(hl), #0x02
                                     99 ;src/main.c:24: break;
      000048 18 DE                  100 	jr	00108$
                                    101 ;src/main.c:26: case J_LEFT:
      00004A                        102 00102$:
                                    103 ;/opt/gbdk/include/gb/gb.h:1174: shadow_OAM[nb].tile=tile;
      00004A 21r02r00               104 	ld	hl, #(_shadow_OAM + 2)
      00004D 36 04                  105 	ld	(hl), #0x04
      00004F 21r06r00               106 	ld	hl, #(_shadow_OAM + 6)
      000052 36 06                  107 	ld	(hl), #0x06
                                    108 ;src/main.c:29: break;
      000054 18 D2                  109 	jr	00108$
                                    110 ;src/main.c:31: case J_UP:
      000056                        111 00103$:
                                    112 ;/opt/gbdk/include/gb/gb.h:1174: shadow_OAM[nb].tile=tile;
      000056 21r02r00               113 	ld	hl, #(_shadow_OAM + 2)
      000059 36 08                  114 	ld	(hl), #0x08
      00005B 21r06r00               115 	ld	hl, #(_shadow_OAM + 6)
      00005E 36 0A                  116 	ld	(hl), #0x0a
                                    117 ;src/main.c:34: break;
      000060 18 C6                  118 	jr	00108$
                                    119 ;src/main.c:36: case J_DOWN:
      000062                        120 00104$:
                                    121 ;/opt/gbdk/include/gb/gb.h:1174: shadow_OAM[nb].tile=tile;
      000062 21r02r00               122 	ld	hl, #(_shadow_OAM + 2)
      000065 36 0C                  123 	ld	(hl), #0x0c
      000067 21r06r00               124 	ld	hl, #(_shadow_OAM + 6)
      00006A 36 0E                  125 	ld	(hl), #0x0e
                                    126 ;src/main.c:39: break;
                                    127 ;src/main.c:46: return 0;
                                    128 ;src/main.c:47: }
      00006C 18 BA                  129 	jr	00108$
                                    130 	.area _CODE
                                    131 	.area _INITIALIZER
                                    132 	.area _CABS (ABS)
